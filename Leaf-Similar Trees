/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public void postorder(TreeNode root,ArrayList<Integer> al)
    {
        if(root==null)return;
        postorder(root.left,al);
        postorder(root.right,al);
        if(root.left==null && root.right==null)al.add(root.val);
    }
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        ArrayList<Integer> tree1=new ArrayList<> ();
        postorder(root1,tree1);
        ArrayList<Integer> tree2=new ArrayList<> ();
        postorder(root2,tree2);
        System.out.println(tree1);
        System.out.println(tree2);
        if(tree1.equals(tree2))return true;
        return false;
    }
}
