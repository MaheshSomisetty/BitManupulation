/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int c=0;
    public void dfs(TreeNode root,HashMap<Integer,Integer> mp){
        if(root==null)return;
        mp.put(root.val,mp.getOrDefault(root.val,0)+1);
        if(root.left==null && root.right==null){
            int e=0,o=0;
            for(int i:mp.keySet()){
                if(mp.get(i)%2==0)e+=1;
                else o+=1;
            }
            if(o<=1)c+=1;
        }
        dfs(root.left,mp);
        dfs(root.right,mp);
        mp.put(root.val,mp.get(root.val)-1);
    }
    public int pseudoPalindromicPaths (TreeNode root) {
        HashMap<Integer,Integer> mp=new HashMap<> ();
        dfs(root,mp);
        return c;
    }
}
